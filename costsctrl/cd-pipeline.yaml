AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template for CD pipelines'
Parameters:
  ProjectName:
    Description: Name for the current project
    Type: String
    Default: test-project
  StageName:
    Description: Stage name
    Type: String
    Default: dev
  ModuleName:
    Description: Module for which pipeline is build
    Type: String
    Default: aws-init
  RandomParameter:
    Description: Random parameter to force stack updates
    Type: String
    Default: 123456    
  Version:
    Description: Version
    Type: String
    Default: 1.0.0

Resources:
      
# CodePipeline
# Role and permissions used by the CF deploy step in the CD pipeline
#            
  ModuleCdCfCodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-cf-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*Put*
                  - s3:*Get*
                  - s3:*Create*
                  - s3:*Update*
                  - cloudwatch:*List*
                  - cloudwatch:*Describe*
                  - cloudwatch:*Put*
                  - cloudwatch:*Get*                    
                  - cloudwatch:*Set*
                  - logs:*
                  - ec2:*
                  - ebs:*
                  - sns:*
                  - ses:*
                  - sqs:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - ecr:*
                  - eks:*
                  - cur:*
                  - ce:* 
                  - ssm:* 
                  - eks:*
                  - lambda:*                                               
                  - route53:*
                  - apigateway:*  
                  - kinesis:*                                  
                  - elasticfilesystem:*                               
                  - autoscaling:*
                  - cloudformation:*
                  - elasticbeanstalk:*
                  - elasticloadbalancing:*
                  - codecommit:*List*
                  - codecommit:*Get*
                  - codecommit:*Update*
                  - codecommit:*Describe*                                                                   
                  - iam:CreateInstanceProfile
                  - iam:UpdateAssumeRolePolicy
                  - iam:GetPolicyVersion
                  - iam:ListRoleTags
                  - iam:TagRole
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:CreateRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:AddRoleToInstanceProfile
                  - iam:ListInstanceProfilesForRole
                  - iam:PassRole
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:ListAttachedRolePolicies
                  - iam:ListRolePolicies
                  - iam:CreatePolicyVersion
                  - iam:ListPolicies
                  - iam:GetRole
                  - iam:GetInstanceProfile
                  - iam:GetPolicy
                  - iam:ListEntitiesForPolicy
                  - iam:ListRoles
                  - iam:DeleteRole
                  - iam:UpdateRoleDescription
                  - iam:ListInstanceProfiles
                  - iam:CreatePolicy
                  - iam:ListPolicyVersions
                  - iam:UpdateRole
                  - iam:GetRolePolicy
                  - iam:DeletePolicy                  
                  - iam:DeletePolicyVersion
                  - iam:DeleteInstanceProfile
                  - secretsmanager:GetSecretValue
                  - application-autoscaling:*
                Resource: '*'
      Tags: 
        - 
          Key: 'scope'
          Value: !Ref ProjectName
        - 
          Key: 'module'
          Value: !Ref ModuleName
        - 
          Key: 'security'
          Value: !Sub ${ProjectName}-${ModuleName} 
# CodePipeline
# Role and permissions used by the CD pipelines
#            
  ModuleCdCodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-cpcd-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive                  
                  - codecommit:UploadArchive
                  - codedeploy:CreateDeployment
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:GetApplicationRevision                  
                  - codedeploy:RegisterApplicationRevision
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                  - s3:*Put*
                  - s3:*Get*                  
                  - s3:*Create*
                  - s3:*Update*
                  - iam:PassRole                  
                  - cloudwatch:*List*
                  - cloudwatch:*Describe*
                  - cloudwatch:*Put*
                  - cloudwatch:*Get*                    
                  - cloudwatch:*Set*
                  - logs:*Create*                                 
                  - logs:*List*
                  - logs:*Get*
                  - logs:*Put*
                  - logs:*Describe*                    
                  - cloudformation:*List*
                  - cloudformation:*Describe*
                  - cloudformation:*Get*              
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - ecr:DescribeImages
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codestar-connections:UseConnection                                                                                                                 
                Resource: '*'
      Tags: 
        - 
          Key: 'scope'
          Value: !Ref ProjectName
        - 
          Key: 'module'
          Value: !Ref ModuleName
        - 
          Key: 'security'
          Value: !Sub ${ProjectName}-${ModuleName}       
# CodePipeline
# The CD pipeline
#      
  ModuleCdPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: ModuleCdCodePipelineServiceRole
    Properties:
      Name: !Sub ${AWS::StackName}
      RoleArn: !GetAtt ModuleCdCodePipelineServiceRole.Arn
      ArtifactStore:
        Location:                  
          Fn::ImportValue:
            !Sub "${ProjectName}-ci-pipeline-${ModuleName}-master-artifacts-bucket"
        Type: S3
      RestartExecutionOnUpdate: true        
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: FetchArtifacts
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: S3
              OutputArtifacts:
                - Name: CfTemplates
              Configuration:
                S3Bucket: 
                  Fn::ImportValue:
                    !Sub "${ProjectName}-ci-pipeline-${ModuleName}-master-artifacts-bucket"
                S3ObjectKey: !Join ['', [ !Sub "templates/${ModuleName}-cd-pipeline-artifact-",  !Ref Version, '.zip' ]]
              RunOrder: 1
        - Name: ApproveDeployment
          Actions:
            - InputArtifacts: []
              Name: !Sub ApproveDeploymentTo${StageName}
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: '1'
                Provider: Manual
              OutputArtifacts: []
              Configuration: {}
              RunOrder: 1
        - Name: DeploymentEcsCluster
          Actions:
            - InputArtifacts:
                - Name: CfTemplates
              Name: !Sub EcsDeploymentTo${StageName}
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              OutputArtifacts: []
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: 
                  !GetAtt ModuleCdCfCodePipelineServiceRole.Arn
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                StackName: !Sub "${ProjectName}-${ModuleName}-${StageName}"
                ParameterOverrides: !Sub '{"ProjectName": "${ProjectName}","StageName": "${StageName}","ModuleName": "${ModuleName}"}'
                TemplatePath: !Sub "CfTemplates::cost-controller.yaml"
              RunOrder: 1
      Tags: 
        - 
          Key: 'scope'
          Value: !Ref ProjectName
        - 
          Key: 'module'
          Value: !Ref ModuleName
        - 
          Key: 'security'
          Value: !Sub ${ProjectName}-${ModuleName}                      
# Dummy role to force stack updates
#            
  DummyRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub ${RandomParameter}-cd-pipeline-dummy-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codedeploy:GetDeployment
                Resource: '*'
      Tags: 
        - 
          Key: 'scope'
          Value: !Ref ProjectName
        - 
          Key: 'module'
          Value: !Ref ModuleName 
        - 
          Key: 'security'
          Value: !Sub ${ProjectName}-${ModuleName}                               